#
# BUILD.bazel
#

load("@rules_go//go:def.bzl", "go_binary", "go_library", "go_test")
load("@rules_cc//cc:defs.bzl", "cc_library")

cc_library(
    name = "system_deps",
    includes = ["external/+_repo_rules+bazel_sysroot_tarball/include"],
    linkopts = [
        "-Lexternal/+_repo_rules+bazel_sysroot_tarball/lib",
        "-Wl,-rpath,external/+_repo_rules+bazel_sysroot_tarball/lib",
        "-Wl,--no-as-needed",
        "-lxml2",
    ],
    visibility = ["//visibility:public"],
    data = ["@bazel_sysroot_tarball//:all"],
)

go_library(
    name = "hello_lib",
    srcs = ["hello.go"],
    importpath = "example.com/hello",
    visibility = ["//visibility:private"],
    cdeps = [":system_deps"],
    cgo = True,
    data = ["@bazel_sysroot_tarball//:all"],
)

go_binary(
    name = "hello",
    embed = [":hello_lib"],
    visibility = ["//visibility:public"],
)

go_test(
    name = "hello_test",
    srcs = ["hello_test.go"],
    embed = [":hello_lib"],
    pure = "off",
    race = "on",
    data = ["@bazel_sysroot_tarball//:all"],
)

platform(
    name = "linux_x86_64",
    constraint_values = [
        "@platforms//os:linux",
        "@platforms//cpu:x86_64",
    ],
    visibility = ["//visibility:public"],
)

platform(
    name = "linux_arm64",
    constraint_values = [
        "@platforms//os:linux",
        "@platforms//cpu:arm64",
    ],
    visibility = ["//visibility:public"],
)

# end